#!/bin/sh

#
# Test the Blake2b-256 check when write raw bytes.
#

. ./common.sh

cat >$CONFIG <<EOF
file-resource 1K.bin {
	host-path = "${TESTFILE_1K}"
}

task complete {
        on-resource 1K.bin {
                raw_write(0)
        }
}
EOF

# Create the firmware file
$FWUP_CREATE -c -f $CONFIG -o $FWFILE

# Now be sneaking and replace the data file with a same-sized imposter
# Erase references to sha256 so that it's not the SHA256 checksums
# that trigger a mismatch.
unzip -q $FWFILE -d $UNZIPDIR
mv $UNZIPDIR/meta.conf $UNZIPDIR/meta.conf.orig
grep -v sha256 $UNZIPDIR/meta.conf.orig > $UNZIPDIR/meta.conf
rm $UNZIPDIR/meta.conf.orig
cd $UNZIPDIR
zip -q $WORK/imposter-good.fw meta.conf data/1K.bin
cp $TESTFILE_1K_CORRUPT $UNZIPDIR/data/1K.bin
zip -q $WORK/imposter-bad.fw meta.conf data/1K.bin
cd -

# Check that imposter w/o sha256 checksums still works
$FWUP_APPLY -a -d $IMGFILE -i $WORK/imposter-good.fw -t complete
$FWUP_APPLY -V -i $WORK/imposter-good.fw

echo Expecting mismatch during apply...
if $FWUP_APPLY -a -d $IMGFILE -i $WORK/imposter-bad.fw -t complete; then
    echo "This should have failed"
    exit 1
fi

echo Expecting mismatch during verification...
if $FWUP_APPLY -V -i $WORK/imposter-bad.fw; then
    echo "This should have failed"
    exit 1
fi
