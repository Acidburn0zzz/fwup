#!/bin/sh

#
# Test that applying signed firmware the streaming way works
#

. ./common.sh

cat >$CONFIG <<EOF
file-resource TEST {
	host-path = "${WORK}/1K.bin"
}

task complete {
	on-resource TEST { raw_write(0) }
}
EOF

cat >$EXPECTED_META_CONF <<EOF
require-fwup-version="0.0"
file-resource "TEST" {
  length=1024
  blake2b-256="4e175e00a248a235bfb03b15b8bed5a1729a8febc24cf00c6caca1765b301d14"
  # sha256=""
}
task "complete" {
  require-partition1-offset=-1
  verify-on-the-fly=false
  require-unmounted-destination=false
  on-init {
    funlist = {}
  }
  on-finish {
    funlist = {}
  }
  on-error {
    funlist = {}
  }
  on-resource "TEST" {
    # verify-on-the-fly=""
    funlist = {"2", "raw_write", "0"}
  }
}
EOF

# Create new keys
$FWUP_CREATE -g

# Sign the firmware
$FWUP_CREATE -s fwup-key.priv -c -f $CONFIG -o $FWFILE

# Check that the zip file was created as expected
check_meta_conf

# Check that applying the firmware without checking signatures works
cat $FWFILE | $FWUP_APPLY -q -a -d $IMGFILE -t complete

# Check that applying the firmware with checking signatures works
cat $FWFILE | $FWUP_APPLY -q -p fwup-key.pub -a -d $IMGFILE -t complete
