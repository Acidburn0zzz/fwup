#!/bin/sh

#
# Test resources in subdirectories
#

. ./common.sh

# 1KB of all ones
cat /dev/zero | tr '\0' '\377' | dd of=$WORK/1K.bin bs=1K count=1 2>/dev/null

cat >$CONFIG <<EOF
file-resource subdir/onesubdir {
	host-path = "${WORK}/1K.bin"
}
file-resource /rootfile {
	host-path = "${WORK}/1K.bin"
}
file-resource subdir1/subdir2/twosubdir {
        host-path = "${WORK}/1K.bin"
}

task complete {
        on-resource subdir/onesubdir { raw_write(0) }
        on-resource /rootfile { raw_write(4) }
        on-resource subdir1/subdir2/twosubdir { raw_write(8) }
}
EOF

cat >$EXPECTED_META_CONF <<EOF
require-fwup-version="0.0"
file-resource "subdir/onesubdir" {
  length=1024
  blake2b-256="4e175e00a248a235bfb03b15b8bed5a1729a8febc24cf00c6caca1765b301d14"
  # sha256=""
}
file-resource "/rootfile" {
  length=1024
  blake2b-256="4e175e00a248a235bfb03b15b8bed5a1729a8febc24cf00c6caca1765b301d14"
  # sha256=""
}
file-resource "subdir1/subdir2/twosubdir" {
  length=1024
  blake2b-256="4e175e00a248a235bfb03b15b8bed5a1729a8febc24cf00c6caca1765b301d14"
  # sha256=""
}
task "complete" {
  require-partition1-offset=-1
  verify-on-the-fly=false
  require-unmounted-destination=false
  on-init {
    funlist = {}
  }
  on-finish {
    funlist = {}
  }
  on-error {
    funlist = {}
  }
  on-resource "subdir/onesubdir" {
    # verify-on-the-fly=""
    funlist = {"2", "raw_write", "0"}
  }
  on-resource "/rootfile" {
    # verify-on-the-fly=""
    funlist = {"2", "raw_write", "4"}
  }
  on-resource "subdir1/subdir2/twosubdir" {
    # verify-on-the-fly=""
    funlist = {"2", "raw_write", "8"}
  }
}
EOF

$FWUP -c -f $CONFIG -o $FWFILE

# Check that the zip file was created as expected
check_meta_conf
diff $WORK/1K.bin $UNZIPDIR/data/subdir/onesubdir
diff $WORK/1K.bin $UNZIPDIR/rootfile
diff $WORK/1K.bin $UNZIPDIR/data/subdir1/subdir2/twosubdir

# Check that applying the firmware does the expected thing
$FWUP -a -d $IMGFILE -i $FWFILE -t complete
dd if=$WORK/1K.bin seek=0 of=$WORK/expected.bin
dd if=$WORK/1K.bin seek=4 of=$WORK/expected.bin
dd if=$WORK/1K.bin seek=8 of=$WORK/expected.bin
diff $IMGFILE $WORK/expected.bin
